openapi: 3.0.0
info:
  title: Next.js API
  description: API documentation for the Next.js app
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/user:
    get:
      tags:
        - User
      summary: Returns users from database
      parameters:
        - name: filter
          in: query
          description: Filters data based on role
          required: false
          schema:
            type: string
            enum:
              - user
              - admin
            default: user
        - name: skip
          in: query
          description: How many records you want to skip
          required: false
          schema:
            type: integer
            default: 0
        - name: take
          in: query
          description: How many records you want to take
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  schema:
                    $ref: '#/components/schemas/User'
  /api/user/delete/{id}:
    delete:
      tags:
        - User
      summary: Deletes user by database
      parameters:
        - name: id
          in: path
          description: Deletes user by id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted user
          content:
            application/json:
              schema:
                type: object
                properties:
                  schema:
                    $ref: '#/components/schemas/User'
        '500':
          description: Internal server error when trying to delete user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/test/user/create:
    post:
      tags:
        - Test
      summary: Creates users in database for when you want to test the users
      parameters:
        - name: amount
          in: query
          description: Add how many users you want to create in the database
          required: false
          schema:
            type: string
            default: 10
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  schema:
                    $ref: '#/components/schemas/User'
  /api/test/user/delete:
    delete:
      tags:
        - Test
      summary: Deletes all users except the first user
      responses:
        '200':
          description: Successfully deleted all users except first user
          content:
            application/json:
              schema:
                type: object
                properties:
                  schema:
                    $ref: '#/components/schemas/User'
        '404':
          description: No user Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  schema:
                    $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: autoincrement
          example: 1
        name:
          type: string
          format: hexadecimal
          example: "da1a6c268ed418ad879c331c29d05808"
        ivName:
          type: integer
          format: int32
          minimum: 0
          maximum: 255
          example: [ 169,191,50,57,173,224,220,7,128,117,195,45,62,111,52,245 ]
        email:
          type: string
          format: hexadecimal
          example: "01302556fc17263316c471fc595a8cfe14f7c910252f3b52f3b0cf13105615e9"
        ivEmail:
          type: integer
          format: int32
          minimum: 0
          maximum: 255
          example: [ 156,177,172,35,57,13,245,54,159,105,211,88,72,168,142,84 ]
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
          format: url
          example: "https://lh3.googleusercontent.com/a/ACg8ocKacwDbnb8XTa16VEiFJdQlDfpjtbndZhXDz5IGoRCzTThS_kM=s96-c"
        role:
          type: string
          default: "user"
          example: "admin"
        accounts:
          type: array
          xml:
            name: accounts
            wrapped: true
          items:
            $ref: '#/components/schemas/Account'
        sessions:
          type: array
          xml:
            name: sessions
            wrapped: true
          items:
            $ref: '#/components/schemas/Session'
        Authenticator:
          type: array
          xml:
            name: authenticator
            wrapped: true
          items:
            $ref: '#/components/schemas/Authenticator'
        createdAt:
          type: string
          format: date-time
          example: "2024-09-02T15:36:06.095Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-09-02T15:36:06.095Z"
    Account:
      type: object
      properties:
        userId:
          type: integer
          xml:
            name: user
            wrapped: true
          items:
            $ref: '#/components/schemas/User'
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        createdAt:
          type: string
          format: date-time
          example: "2024-09-02T15:36:06.095Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-09-02T15:36:06.095Z"
    Session:
      properties:
        id:
          type: integer
          format: autoincrement
        sessionToken:
          type: string
        userId:
          type: integer
          xml:
            name: user
            wrapped: true
          items:
            $ref: '#/components/schemas/User'
        expires:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
          example: "2024-09-02T15:36:06.095Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-09-02T15:36:06.095Z"
    VerificationToken:
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
    Authenticator:
      properties:
        credentialID:
          type: string
        userId:
          type: integer
          xml:
            name: user
            wrapped: true
          items:
            $ref: '#/components/schemas/User'
        providerAccountId:
          type: string
        credentialPublicKey:
          type: string
        counter:
          type: integer
        credentialDeviceType:
          type: string
        credentialBackedUp:
          type: boolean
        transports:
          type: string
